add_markers(name = ~continent) %>%
layout(title = '인당 GDP와 기대수명',
xaxis = list(title = '1인당 GDP'),
yaxis = list(title = '기대수명'))
) %>%
subplot(nrows = 2)
gapminder_df
gapminder_df %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='기대수명', values = ~lifeExp),
list(label='인구수',   values = ~pop),
list(label='인당GDP',  values = ~gdpPercap)
)
)
gapminder_df %>%
plot_ly() %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='기대수명', values = ~lifeExp),
list(label='인구수',   values = ~pop),
list(label='인당GDP',  values = ~gdpPercap),
list(label='대륙',  values = ~continent)
)
)
gapminder_df %>%
plot_ly(color = ~continent) %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='기대수명', values = ~lifeExp),
list(label='인구수',   values = ~pop),
list(label='인당GDP',  values = ~gdpPercap)
)
)
gapminder_df %>%
style(showupperhalf = FALSE) %>%
plot_ly(color = ~continent) %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='기대수명', values = ~lifeExp),
list(label='인구수',   values = ~pop),
list(label='인당GDP',  values = ~gdpPercap)
)
)
gapminder_df %>%
plot_ly(color = ~continent) %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='기대수명', values = ~lifeExp),
list(label='인구수',   values = ~pop),
list(label='인당GDP',  values = ~gdpPercap)
)
) %>%
style(showupperhalf = FALSE)
gapminder_df %>%
mutate(pop = log10(pop)) %>%
plot_ly(color = ~continent) %>%
add_trace(
type = 'splom',
dimensions = list(
list(label='기대수명', values = ~lifeExp),
list(label='인구수',   values = ~pop),
list(label='인당GDP',  values = ~gdpPercap)
)
) %>%
style(showlowerhalf = FALSE)
gapminder_df %>%
plot_ly(x = ~gdpPercap, y = ~lifeExp) %>%
add_histogram2d(nbinsx= 30, nbinsy=30)
airports <- read_csv("https://raw.githubusercontent.com/datasets/airport-codes/master/data/airport-codes.csv")
airport_df <- airports %>%
select(ident, name, iso_country, municipality, coordinates) %>%
separate(coordinates, into=c("lat", "lon"), sep = ",") %>%
mutate(lon = as.numeric(lon),
lat = as.numeric(lat)) %>%
filter(iso_country == "KR")
airport_df
airport_df <- airports %>%
select(ident, name, iso_country, municipality, coordinates) %>%
separate(coordinates, into=c("lat", "lon"), sep = ",") %>%
mutate(lon = as.numeric(lon),
lat = as.numeric(lat)) %>%
filter(iso_country == "KR") %>%
mutate(value = rpois(nrow(airports)))
airport_df <- airports %>%
select(ident, name, iso_country, municipality, coordinates) %>%
separate(coordinates, into=c("lat", "lon"), sep = ",") %>%
mutate(lon = as.numeric(lon),
lat = as.numeric(lat)) %>%
filter(iso_country == "KR") %>%
mutate(value = rpois(100, nrow(airports)))
airport_df
airport_df <- airports %>%
select(ident, name, iso_country, municipality, coordinates) %>%
separate(coordinates, into=c("lat", "lon"), sep = ",") %>%
mutate(lon = as.numeric(lon),
lat = as.numeric(lat)) %>%
filter(iso_country == "KR") %>%
mutate(value = rpois(100, 1374))
rpois(100, 1374)
airport_df <- airports %>%
select(ident, name, iso_country, municipality, coordinates) %>%
separate(coordinates, into=c("lat", "lon"), sep = ",") %>%
mutate(lon = as.numeric(lon),
lat = as.numeric(lat)) %>%
filter(iso_country == "KR") %>%
mutate(value = rpois(1374, lambda=100))
airport_df
? plot_geo
? map_data
map_data(maps::korea)
map_data(maps::korea())
install.packages("maps")
map_data(maps::france())
maps::county()
maps::county()
maps::map(database = 'world', regions = 'korea')
maps::map(database = 'world', regions = 'france')
maps::map(database = 'world', regions = 'south kroea')
maps::map(database = 'world', regions = 'south korea)
maps::map(database = 'world', regions = 'south korea')
maps::map(database = 'world', regions = 'south korea')
maps::map_data(database = 'world', regions = 'south korea')
map_data(database = 'world', regions = 'south korea')
map_data(database = 'world', regions = 'south korea') %>%
plot_geo(x = ~lng, y = ~lat)
map_data(database = 'world', regions = 'south korea')
map_data(database = 'world', regions = 'south korea') %>%
plot_geo(x = ~long, y = ~lat)
map_data(database = 'world', regions = 'south korea') %>%
group_by(group) %>%
plot_geo(x = ~long, y = ~lat) %>%
add_markers(size = I(1))
airport_df %>%
map_data(database = 'world', regions = 'south korea') %>%
group_by(group) %>%
plot_geo(x = ~lng, y = ~lat) %>%
add_markers(size = I(1))
airport_df
map_data(database = 'world', regions = 'south korea') %>%
group_by(group) %>%
plot_geo(x = ~long, y = ~lat) %>%
add_markers(size = I(1))
map_data(database = 'world', regions = 'south korea')
airport_df
airport_df <- airports %>%
select(ident, name, iso_country, municipality, coordinates) %>%
separate(coordinates, into=c("lat", "long"), sep = ",") %>%
mutate(lon = as.numeric(lon),
lat = as.numeric(lat)) %>%
filter(iso_country == "KR") %>%
mutate(value = rpois(1374, lambda=100))
airport_df <- airports %>%
select(ident, name, iso_country, municipality, coordinates) %>%
separate(coordinates, into=c("lat", "long"), sep = ",") %>%
mutate(long = as.numeric(long),
lat = as.numeric(lat)) %>%
filter(iso_country == "KR") %>%
mutate(value = rpois(1374, lambda=100))
map_data(database = 'world', regions = 'south korea') %>%
group_by(group) %>%
plot_geo(x = ~long, y = ~lat) %>%
add_markers(size = I(1))
map_data(database = 'world', regions = 'south korea') %>%
group_by(group) %>%
plot_geo(x = ~long, y = ~lat) %>%
add_markers(size = value)
airport_df %>%
map_data(database = 'world', regions = 'south korea') %>%
group_by(group) %>%
plot_geo(x = ~long, y = ~lat) %>%
add_markers(size = value)
map_data(database = 'world', regions = 'south korea') %>%
group_by(group) %>%
plot_geo(x = ~long, y = ~lat) %>%
add_markers(size = I(1))
install.packages("cowplot")
library(tidyverse)
library(gapminder)
library(cowplot)
gapminder %>%
filter(year == max(year)) %>%
ggplot(aes(x=gdpPercap)) +
geom_histogram()
continous_g <- gapminder %>%
filter(year == max(year)) %>%
ggplot(aes(x=gdpPercap)) +
geom_histogram()
gapminder_df <- gapminder %>%
filter(year == max(year))
gapminder_df %>%
ggplot(aes(x=continent)) +
geom_col()
gapminder_df %>%
ggplot(aes(y=continent)) +
geom_col()
gapminder_df %>%
count(continent) %>%
ggplot(aes(x=continent, y=n)) +
geom_col()
time_series_g <- gapminder %>%
group_by(year) %>%
summarise(lifeExp_median = median(lifeExp)) %>%
ggplot(aes(x=year, y=lifeExp_median)) +
geom_line()
time_series_g
time_series_g <- gapminder %>%
group_by(year) %>%
summarise(lifeExp_median = median(lifeExp)) %>%
ggplot(aes(x=year, y=lifeExp_median)) +
geom_line() +
geom_point()
cowplot(continous_g, discrete_g, time_series_g, nrow=1)
plot_grid(continous_g, discrete_g, time_series_g, nrow=1)
continous_g <- gapminder_df %>%
ggplot(aes(x=gdpPercap)) +
geom_histogram()
discrete_g <- gapminder_df %>%
count(continent) %>%
ggplot(aes(x=continent, y=n)) +
geom_col()
time_series_g <- gapminder %>%
group_by(year) %>%
summarise(lifeExp_median = median(lifeExp)) %>%
ggplot(aes(x=year, y=lifeExp_median)) +
geom_line() +
geom_point()
plot_grid(continous_g, discrete_g, time_series_g, nrow=1)
sf_df <- read_csv("data/Salaries.csv")
problems(sf_df)
sf_df
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=100)
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=100) +
scale_x_log10() +
scale_y_log10()
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=200) +
scale_x_log10() +
scale_y_log10()
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_log10() +
scale_y_log10()
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_log10(scales::comma) +
scale_y_log10(scales::comma)
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_log10(scales::comma()) +
scale_y_log10(scales::comma())
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt(scales::comma) +
scale_y_sqrt(scales::comma)
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt() +
scale_y_sqrt()
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt(scales::comma) +
scale_y_sqrt()
install.packages("scales")
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt(scales::comma) +
scale_y_sqrt()
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt(labels = scales::comma) +
scale_y_sqrt()
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=50) +
scale_x_sqrt(labels = scales::comma) +
scale_y_sqrt(labels = scales::comma)
sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=100) +
scale_x_sqrt(labels = scales::comma) +
scale_y_sqrt(labels = scales::comma)
scatterplot_g <- sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_point(alpha=0.1) +
scale_x_sqrt(labels = scales::comma) +
scale_y_sqrt(labels = scales::comma)
scatterplot_g
hex_g <- sf_df %>%
ggplot(aes(x=BasePay, y=TotalPay)) +
geom_hex(bins=100) +
scale_x_sqrt(labels = scales::comma) +
scale_y_sqrt(labels = scales::comma)
hex_g
sf_df
sf_df %>%
count(Agency)
sf_df %>%
count(JobTitle)
sf_df %>%
count(Notes)
View(sf_df)
sf_df %>% count(Status)
sf_df %>%
select(-Agency, -Notes, -Status, -Benefits, -TotalPayBenefits, -JobTitle, -Id) %>%
gather(항목, 금액, -Year, -EmployeeName)
sf_tidy_df <- sf_df %>%
select(-Agency, -Notes, -Status, -Benefits, -TotalPayBenefits, -JobTitle, -Id) %>%
gather(항목, 금액, -Year, -EmployeeName)
sf_tidy_df <- sf_df %>%
select(-Agency, -Notes, -Status, -Benefits, -TotalPayBenefits, -JobTitle, -Id) %>%
gather(`항목`, `금액`, -Year, -EmployeeName)
sf_tidy_df %>%
group_by(Year, `항목`) %>%
summarise(median_dollar = median(`금액`))
sf_tidy_df %>%
group_by(Year, `항목`) %>%
summarise(median_dollar = mean(`금액`, na.rm = TRUE))
sf_salary_summary_df <- sf_tidy_df %>%
group_by(Year, `항목`) %>%
summarise(`평균연봉` = mean(`금액`, na.rm = TRUE))
sf_salary_summary_df
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
facet_grid(~ 항목)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ 항목)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ `항목`) +
coord_fixed(ratio = 0.4)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ `항목`) +
coord_fixed(ratio = 0.7)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ `항목`) +
coord_fixed(ratio = 1)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ `항목`) +
coord_fixed(ratio = 2)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line() +
facet_grid(~ `항목`)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point() +
geom_line(size=2) +
facet_grid(~ `항목`)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_point(size=3, color="black") +
geom_line(size=2, color="darkgray") +
facet_grid(~ `항목`)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_line(size=2, color="darkgray") +
geom_point(size=3, color="black") +
facet_grid(~ `항목`)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_line(size=2, color="darkgray") +
geom_point(size=3, color="black") +
facet_wrap(~ `항목`)
sf_salary_summary_df %>%
ggplot(aes(x=Year, y=`평균연봉`)) +
geom_line(size=2, color="darkgray") +
geom_point(size=3, color="black") +
facet_wrap(~ `항목`, nrow=1)
? geom_qq
sf_tidy_df
sf_tidy_df %>%
ggplot(aes(x=금액, color= Year)) +
geom_qq() +
facet_wrap(~Year)
sf_tidy_df %>%
ggplot(aes(sample=금액, color= Year)) +
geom_qq() +
facet_wrap(~Year)
sf_tidy_df %>%
ggplot(aes(sample=`금액`, color= as.factor(Year))) +
geom_qq() +
facet_wrap(~Year)
sf_tidy_df %>%
sample_frac(0.1) %>%
ggplot(aes(sample=`금액`, color= as.factor(Year))) +
geom_qq() +
facet_wrap(~Year)
sf_tidy_df %>%
sample_frac(0.1) %>%
ggplot(aes(sample=`금액`, color= as.factor(Year))) +
geom_qq()
sf_tidy_df
sf_tidy_df %>%
sample_frac(0.1) %>%
ggplot(aes(sample=`금액`, color= as.factor(Year))) +
geom_qq() +
facet_wrap(~`항목`)
library(trelliscopejs)
gapminder %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line()
gapminder %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line() +
facet_wrap(~contienent)
gapminder %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x=year, y=lifeExp, color=country)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x=year, y=lifeExp, group=country)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = country)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line() +
facet_wrap(~continent)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line() +
facet_wrap(~continent) +
guides(color = FALSE)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country, color = continent)) +
geom_line() +
facet_wrap(~continent+continent) +
guides(color = FALSE)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_line() +
facet_wrap(~continent+continent) +
guides(color = FALSE)
gapminder %>%
ggplot(aes(x = year, y = lifeExp, group = country)) +
geom_line() +
facet_wrap(~country+continent) +
guides(color = FALSE)
gapminder %>%
ggplot(aes(x = year, y = lifeExp)) +
geom_line() +
facet_wrap(~country+continent) +
guides(color = FALSE)
ggplot(gapminder, aes(x = year, y = lifeExp)) +
geom_line() +
facet_trelliscope(~ country + continent)
ggplot(gapminder, aes(x = year, y = lifeExp)) +
geom_line() +
geom_point() +
facet_trelliscope(~ country + continent,
nrow=3, ncol=4,
plot_ly = TRUE)
ggplot(gapminder, aes(x = year, y = lifeExp)) +
geom_line() +
geom_point() +
facet_trelliscope(~ country + continent,
nrow=3, ncol=4,
as_plotly = TRUE)
ggplot(gapminder, aes(x = year, y = lifeExp)) +
geom_line() +
geom_point() +
facet_trelliscope(~ country + continent,
nrow=3, ncol=4,
as_plotly = TRUE,
auto_cog = TRUE)
